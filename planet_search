#!/usr/bin/env python3
"""
Command line script for planet search.

:Author: Daria Cara

:License: :doc:`LICENSE`

.. moduleauthor:: Daria Cara <daria.cara.2@gmail.com>

"""
import argparse

from search_tools import find_planets_around_stars

if __name__ == "__main__":
    # Parse input parameters:
    parser = argparse.ArgumentParser(
        description='Find multiple planets around each star in the input list.'
    )

    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument(
        '-f', '--file', action='store',
        help='Name of a CSV file containing EPIC star IDs.'
    )

    group.add_argument(
        '-s', '--stars', action='store',
        help='Comma-separated list of EPIC star IDs.'
    )

    parser.add_argument(
        '-c', '--campaign', default='*', action='store',
        help='Campaign number.'
    )

    parser.add_argument(
        '-l', '--log', default='summary_log.csv', action='store',
        help='File name of the log file containing results.'
    )

    parser.add_argument(
        '-p', '--provenance', default="EVEREST,K2SFF,K2", action='store',
        help='Find planets using data from the specified provenance.'
    )

    parser.add_argument(
        '-m', '--max_planets', default=1, action='store', type=int,
        help='Maximum number of planets to find for each star.'
    )

    parser.add_argument(
        '-i', '--interactive', action='store_true',
        help='Whether or not to create interactive plots.'
    )

    options = parser.parse_args()

    file_name = options.file
    stars = options.stars
    if file_name is None:
        file_name = [s.strip() for s in stars.split(',') if s]

    log_file = options.log
    campaign_no = options.campaign
    max_planets = options.max_planets
    interactive = options.interactive
    provenance = list(p for p in options.provenance.split(',') if p)

    find_planets_around_stars(
        stars_df=file_name, campaign_no=campaign_no, max_planets=max_planets,
        log_file=log_file, provenance=provenance, interactive=interactive
    )
